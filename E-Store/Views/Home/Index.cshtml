@model IEnumerable<ProductVM>

@{
    ViewData["Title"] = "Home Page";
}

<div class="my-5">
    <h1 class="display-4">Welcome to E-Store</h1>
    <p class="lead text-dimgrey"><strong>This Is an E-Commerce App, that was built using ASP.NET Core MVC.</strong></p>
</div>

<div class="my-5">
    <div class="row row-cols-1 row-cols-md-3 row-cols-lg-4 g-4" id="products-container">
        @foreach (var product in Model)
        {
            <div class="col">
                <div class="card h-100">
                    <img src="~/@product.ImageUrl" class="card-img-top p-3" alt="..." />
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@product.Name</h5>
                        <p class="card-text">@product.Description</p>
                        <h6 class="text-secondary">Price: <span class="text-success h4">@product.Price.ToString("n")</span> EGP</h6>
                        <h6 class="text-secondary">Brand: <strong>@product.BrandName</strong></h6>
                        <h6 class="text-secondary mb-3">
                            Categories:
                            @foreach (var category in @product.CategoryNames)
                            {
                                <span class="badge bg-secondary" style="margin-bottom:2px;">@category</span>
                            }
                        </h6>
                        <div class="mt-auto">
                            <a asp-action="ProductDetails" asp-route-id="@product.Id" class="btn btn-outline-success px-4">Details</a>
                            <a asp-controller="ShoppingCart" asp-action="AddItemToCart" asp-route-id="@product.Id"
                               asp-route-returnUrl="@Context.Request.Path" class="btn btn-warning" style="color: #444;"> Add to cart</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="text-center mt-4">
        <button class="btn btn-outline-secondary" id="load-more">Load More</button>
        <p id="no-more-data" hidden>There is no more data to load</p>
    </div>
</div>

@section scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function (event) {
            let pageNumber = 2;
            const addMoreBtn = document.getElementById('load-more');
            const noMoreData = document.getElementById('no-more-data');

            addMoreBtn.onclick = function () {
                fetch(`/Home/LoadProducts?pageNumber=${pageNumber}`, {
                    headers: { 'Content-Type': 'application/json' },
                    method: 'Get',
                }).then(response => {
                    if (!response.ok) {
                        throw new Error(response.status);
                    } else if (response.status == 204) {
                        addMoreBtn.hidden = true;
                        noMoreData.hidden = false;
                        return null;
                    }
                    return response.text();
                }).then(data => {
                    if (data !== null) {
                        document.getElementById('products-container').innerHTML += data;
                        pageNumber++;
                    }
                }).catch(error => {
                    alert(error);
                });
            };
        });
    </script>
}